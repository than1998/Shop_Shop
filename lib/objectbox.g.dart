// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/products_cart_models.dart';
import 'models/products_models.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 5351441412295309717),
      name: 'Products',
      lastPropertyId: const obx_int.IdUid(6, 4409041379787163603),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8227552797578759076),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8986860166788582708),
            name: 'idProducts',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 408961699292864),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6413870007066958434),
            name: 'imageUrl',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3933286946144439400),
            name: 'price',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4409041379787163603),
            name: 'isSaved',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 5450647990099399992),
      name: 'ProductsCart',
      lastPropertyId: const obx_int.IdUid(6, 1072275259583291191),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6549552811456342597),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5776332139096742791),
            name: 'idProducts',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1049572478427658004),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5388761907573380617),
            name: 'imageUrl',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6833522100084146661),
            name: 'price',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1072275259583291191),
            name: 'amount',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 5450647990099399992),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Products: obx_int.EntityDefinition<Products>(
        model: _entities[0],
        toOneRelations: (Products object) => [],
        toManyRelations: (Products object) => {},
        getId: (Products object) => object.id,
        setId: (Products object, int id) {
          object.id = id;
        },
        objectToFB: (Products object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final imageUrlOffset = fbb.writeString(object.imageUrl);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.idProducts);
          fbb.addOffset(2, nameOffset);
          fbb.addOffset(3, imageUrlOffset);
          fbb.addFloat64(4, object.price);
          fbb.addBool(5, object.isSaved);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idProductsParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final imageUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final priceParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final isSavedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final object = Products(
              idProductsParam, nameParam, imageUrlParam, priceParam,
              id: idParam, isSaved: isSavedParam);

          return object;
        }),
    ProductsCart: obx_int.EntityDefinition<ProductsCart>(
        model: _entities[1],
        toOneRelations: (ProductsCart object) => [],
        toManyRelations: (ProductsCart object) => {},
        getId: (ProductsCart object) => object.id,
        setId: (ProductsCart object, int id) {
          object.id = id;
        },
        objectToFB: (ProductsCart object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final imageUrlOffset = fbb.writeString(object.imageUrl);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.idProducts);
          fbb.addOffset(2, nameOffset);
          fbb.addOffset(3, imageUrlOffset);
          fbb.addFloat64(4, object.price);
          fbb.addInt64(5, object.amount);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idProductsParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final imageUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final priceParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final amountParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final object = ProductsCart(idProductsParam, nameParam, imageUrlParam,
              priceParam, amountParam,
              id: idParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Products] entity fields to define ObjectBox queries.
class Products_ {
  /// see [Products.id]
  static final id =
      obx.QueryIntegerProperty<Products>(_entities[0].properties[0]);

  /// see [Products.idProducts]
  static final idProducts =
      obx.QueryIntegerProperty<Products>(_entities[0].properties[1]);

  /// see [Products.name]
  static final name =
      obx.QueryStringProperty<Products>(_entities[0].properties[2]);

  /// see [Products.imageUrl]
  static final imageUrl =
      obx.QueryStringProperty<Products>(_entities[0].properties[3]);

  /// see [Products.price]
  static final price =
      obx.QueryDoubleProperty<Products>(_entities[0].properties[4]);

  /// see [Products.isSaved]
  static final isSaved =
      obx.QueryBooleanProperty<Products>(_entities[0].properties[5]);
}

/// [ProductsCart] entity fields to define ObjectBox queries.
class ProductsCart_ {
  /// see [ProductsCart.id]
  static final id =
      obx.QueryIntegerProperty<ProductsCart>(_entities[1].properties[0]);

  /// see [ProductsCart.idProducts]
  static final idProducts =
      obx.QueryIntegerProperty<ProductsCart>(_entities[1].properties[1]);

  /// see [ProductsCart.name]
  static final name =
      obx.QueryStringProperty<ProductsCart>(_entities[1].properties[2]);

  /// see [ProductsCart.imageUrl]
  static final imageUrl =
      obx.QueryStringProperty<ProductsCart>(_entities[1].properties[3]);

  /// see [ProductsCart.price]
  static final price =
      obx.QueryDoubleProperty<ProductsCart>(_entities[1].properties[4]);

  /// see [ProductsCart.amount]
  static final amount =
      obx.QueryIntegerProperty<ProductsCart>(_entities[1].properties[5]);
}
